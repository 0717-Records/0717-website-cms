/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type NavLink = {
  _type: "navLink";
  hideLink?: boolean;
  label?: string;
  linkType?: "internal" | "external";
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "homePage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "eventsIndexPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "collab";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogIndexPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogPost";
  };
  externalUrl?: string;
  pageSectionId?: string;
  openInNewTab?: boolean;
};

export type CtaList = Array<{
  _key: string;
} & EmbeddedCtaButton | {
  _key: string;
} & EmbeddedCtaEmailButton>;

export type SideContent = Array<{
  _key: string;
} & SideContentBlock>;

export type SideContentBlock = {
  _type: "sideContentBlock";
  style?: "plain" | "highlighted";
  title?: string;
  richText?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "body-3xl" | "body-2xl" | "body-xl" | "body-lg" | "body-sm" | "body-xs" | "standout";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    } | {
      _key: string;
    } & Color>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  ctaBlocks?: Array<{
    _key: string;
  } & EmbeddedCtaButton | {
    _key: string;
  } & EmbeddedCtaEmailButton>;
};

export type BlockList = {
  _type: "blockList";
  items?: Array<{
    leftContent?: string;
    rightContent?: string;
    _type: "blockListItem";
    _key: string;
  }>;
};

export type CompanyLinksBlock = {
  _type: "companyLinksBlock";
  blockAdded?: string;
};

export type FavouriteBlock = {
  _type: "favouriteBlock";
  blockAdded?: string;
};

export type CollabAllBlock = {
  _type: "collabAllBlock";
  ctaText?: string;
  noCollabsMessage?: string;
};

export type EventBlock = {
  _type: "eventBlock";
  maxEvents?: number;
};

export type CtaBlogPost = {
  _type: "ctaBlogPost";
  blogPost?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogPost";
  };
};

export type CtaEvents = {
  _type: "ctaEvents";
  events?: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "event";
  }>;
};

export type HomeHeroCtaButton = {
  _type: "homeHeroCtaButton";
  text?: string;
  linkType?: "internal" | "external";
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "homePage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "eventsIndexPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "collab";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogIndexPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogPost";
  };
  externalUrl?: string;
  pageSectionId?: string;
  openInNewTab?: boolean;
};

export type EmbeddedCtaEmailButton = {
  _type: "embeddedCtaEmailButton";
  buttonText?: string;
};

export type EmbeddedCtaButton = {
  _type: "embeddedCtaButton";
  text?: string;
  variant?: "filled" | "outline";
  linkType?: "internal" | "external";
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "homePage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "eventsIndexPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "collab";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogIndexPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogPost";
  };
  externalUrl?: string;
  pageSectionId?: string;
  openInNewTab?: boolean;
};

export type CtaEmailButton = {
  _type: "ctaEmailButton";
  alignment?: "inherit" | "left" | "center" | "right";
};

export type CtaCalloutLink = {
  _type: "ctaCalloutLink";
  heading?: string;
  text?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  linkType?: "internal" | "external";
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "homePage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "eventsIndexPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "collab";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogIndexPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogPost";
  };
  externalUrl?: string;
  pageSectionId?: string;
  openInNewTab?: boolean;
};

export type CtaButton = {
  _type: "ctaButton";
  text?: string;
  variant?: "filled" | "outline";
  alignment?: "inherit" | "left" | "center" | "right";
  linkType?: "internal" | "external";
  internalLink?: {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "page";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "homePage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "eventsIndexPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "collab";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogIndexPage";
  } | {
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    [internalGroqTypeReferenceTo]?: "blogPost";
  };
  externalUrl?: string;
  pageSectionId?: string;
  openInNewTab?: boolean;
};

export type TextImage = {
  _type: "textImage";
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "body-3xl" | "body-2xl" | "body-xl" | "body-lg" | "body-sm" | "body-xs" | "standout";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    } | {
      _key: string;
    } & Color>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  layout?: "text-left" | "text-right";
};

export type Quote = {
  _type: "quote";
  text?: string;
  attribution?: string;
  textAlign?: "inherit" | "left" | "center" | "right";
};

export type BandcampWidget = {
  _type: "bandcampWidget";
  embedCode?: string;
};

export type SpotifyWidget = {
  _type: "spotifyWidget";
  url?: string;
  height?: "compact" | "normal";
};

export type YouTubeVideo = {
  _type: "youTubeVideo";
  url?: string;
};

export type ImageGallery = {
  _type: "imageGallery";
  columns?: "2" | "3" | "4";
  images?: Array<{
    image?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    caption?: string;
    _key: string;
  }>;
};

export type ImageBlock = {
  _type: "imageBlock";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  size?: "full" | "small";
  caption?: string;
};

export type CardGrid = {
  _type: "cardGrid";
  columns?: "2" | "3" | "4";
  cards?: Array<{
    _key: string;
  } & Card>;
};

export type Icon = {
  _type: "icon";
  showIcon?: boolean;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
};

export type RichText = {
  _type: "richText";
  isCallout?: boolean;
  textAlign?: "inherit" | "left" | "center" | "right";
  content?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal" | "body-3xl" | "body-2xl" | "body-xl" | "body-lg" | "body-sm" | "body-xs" | "standout";
    listItem?: "bullet" | "number";
    markDefs?: Array<{
      href?: string;
      _type: "link";
      _key: string;
    } | {
      _key: string;
    } & Color>;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type ItemList = {
  _type: "itemList";
  alignment?: "inherit" | "left" | "center" | "right";
  items?: Array<{
    text?: string;
    icon?: {
      asset?: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      };
      media?: unknown;
      hotspot?: SanityImageHotspot;
      crop?: SanityImageCrop;
      alt?: string;
      _type: "image";
    };
    _type: "listItem";
    _key: string;
  }>;
};

export type Divider = {
  _type: "divider";
  style?: string;
};

export type SubSubSection = {
  _type: "subSubSection";
  hideSection?: boolean;
  title?: string;
  anchorId?: string;
  content?: Array<{
    _key: string;
  } & Divider | {
    _key: string;
  } & ItemList | {
    _key: string;
  } & RichText | {
    _key: string;
  } & Quote | {
    _key: string;
  } & TextImage | {
    _key: string;
  } & Card | {
    _key: string;
  } & CtaButton | {
    _key: string;
  } & CtaCalloutLink | {
    _key: string;
  } & CtaEmailButton | {
    _key: string;
  } & CtaEvents | {
    _key: string;
  } & CtaBlogPost | {
    _key: string;
  } & CardGrid | {
    _key: string;
  } & ImageBlock | {
    _key: string;
  } & ImageGallery | {
    _key: string;
  } & YouTubeVideo | {
    _key: string;
  } & SpotifyWidget | {
    _key: string;
  } & BandcampWidget | {
    _key: string;
  } & EventBlock | {
    _key: string;
  } & CollabAllBlock | {
    _key: string;
  } & FavouriteBlock | {
    _key: string;
  } & CompanyLinksBlock | {
    _key: string;
  } & BlockList>;
};

export type SubSection = {
  _type: "subSection";
  hideSection?: boolean;
  title?: string;
  anchorId?: string;
  content?: Array<{
    _key: string;
  } & SubSubSection | {
    _key: string;
  } & Divider | {
    _key: string;
  } & ItemList | {
    _key: string;
  } & RichText | {
    _key: string;
  } & Quote | {
    _key: string;
  } & TextImage | {
    _key: string;
  } & Card | {
    _key: string;
  } & CtaButton | {
    _key: string;
  } & CtaCalloutLink | {
    _key: string;
  } & CtaEmailButton | {
    _key: string;
  } & CtaEvents | {
    _key: string;
  } & CtaBlogPost | {
    _key: string;
  } & CardGrid | {
    _key: string;
  } & ImageBlock | {
    _key: string;
  } & ImageGallery | {
    _key: string;
  } & YouTubeVideo | {
    _key: string;
  } & SpotifyWidget | {
    _key: string;
  } & BandcampWidget | {
    _key: string;
  } & EventBlock | {
    _key: string;
  } & CollabAllBlock | {
    _key: string;
  } & FavouriteBlock | {
    _key: string;
  } & CompanyLinksBlock | {
    _key: string;
  } & BlockList>;
};

export type CollabPageSection = {
  _type: "collabPageSection";
  hideSection?: boolean;
  title?: string;
  anchorId?: string;
  content?: Array<{
    _key: string;
  } & SubSection | {
    _key: string;
  } & Divider | {
    _key: string;
  } & ItemList | {
    _key: string;
  } & RichText | {
    _key: string;
  } & Quote | {
    _key: string;
  } & TextImage | {
    _key: string;
  } & Card | {
    _key: string;
  } & CtaButton | {
    _key: string;
  } & CtaCalloutLink | {
    _key: string;
  } & CtaEmailButton | {
    _key: string;
  } & CtaEvents | {
    _key: string;
  } & CtaBlogPost | {
    _key: string;
  } & CardGrid | {
    _key: string;
  } & ImageBlock | {
    _key: string;
  } & ImageGallery | {
    _key: string;
  } & YouTubeVideo | {
    _key: string;
  } & SpotifyWidget | {
    _key: string;
  } & BandcampWidget | {
    _key: string;
  } & EventBlock | {
    _key: string;
  } & CollabAllBlock | {
    _key: string;
  } & FavouriteBlock | {
    _key: string;
  } & CompanyLinksBlock | {
    _key: string;
  } & BlockList>;
};

export type PageSection = {
  _type: "pageSection";
  hideSection?: boolean;
  title?: string;
  subtitle?: string;
  anchorId?: string;
  content?: Array<{
    _key: string;
  } & SubSection | {
    _key: string;
  } & Divider | {
    _key: string;
  } & ItemList | {
    _key: string;
  } & RichText | {
    _key: string;
  } & Quote | {
    _key: string;
  } & TextImage | {
    _key: string;
  } & Card | {
    _key: string;
  } & CtaButton | {
    _key: string;
  } & CtaCalloutLink | {
    _key: string;
  } & CtaEmailButton | {
    _key: string;
  } & CtaEvents | {
    _key: string;
  } & CtaBlogPost | {
    _key: string;
  } & CardGrid | {
    _key: string;
  } & ImageBlock | {
    _key: string;
  } & ImageGallery | {
    _key: string;
  } & YouTubeVideo | {
    _key: string;
  } & SpotifyWidget | {
    _key: string;
  } & BandcampWidget | {
    _key: string;
  } & EventBlock | {
    _key: string;
  } & CollabAllBlock | {
    _key: string;
  } & FavouriteBlock | {
    _key: string;
  } & CompanyLinksBlock | {
    _key: string;
  } & BlockList>;
};

export type PageBuilder = Array<{
  _key: string;
} & PageSection | {
  _key: string;
} & Divider | {
  _key: string;
} & ItemList | {
  _key: string;
} & RichText | {
  _key: string;
} & Quote | {
  _key: string;
} & TextImage | {
  _key: string;
} & Card | {
  _key: string;
} & CtaButton | {
  _key: string;
} & CtaCalloutLink | {
  _key: string;
} & CtaEmailButton | {
  _key: string;
} & CtaEvents | {
  _key: string;
} & CtaBlogPost | {
  _key: string;
} & CardGrid | {
  _key: string;
} & ImageBlock | {
  _key: string;
} & ImageGallery | {
  _key: string;
} & YouTubeVideo | {
  _key: string;
} & SpotifyWidget | {
  _key: string;
} & BandcampWidget | {
  _key: string;
} & EventBlock | {
  _key: string;
} & CollabAllBlock | {
  _key: string;
} & FavouriteBlock | {
  _key: string;
} & CompanyLinksBlock | {
  _key: string;
} & BlockList>;

export type Footer = {
  _id: string;
  _type: "footer";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  footerMessages?: Array<{
    title?: string;
    message?: string;
    _key: string;
  }>;
  copyrightText?: string;
};

export type Header = {
  _id: string;
  _type: "header";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  horizontalNav?: Array<{
    _key: string;
  } & NavLink>;
  verticalNav?: Array<{
    _key: string;
  } & NavLink | {
    _key: string;
  } & Divider>;
};

export type BlockContent = Array<{
  children?: Array<{
    marks?: Array<string>;
    text?: string;
    _type: "span";
    _key: string;
  }>;
  style?: "normal" | "body-3xl" | "body-2xl" | "body-xl" | "body-lg" | "body-sm" | "body-xs" | "standout";
  listItem?: "bullet" | "number";
  markDefs?: Array<{
    href?: string;
    _type: "link";
    _key: string;
  } | {
    _key: string;
  } & Color>;
  level?: number;
  _type: "block";
  _key: string;
}>;

export type Favourites = {
  _id: string;
  _type: "favourites";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  category?: string;
  profileImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  order?: number;
  description?: string;
  link?: string;
  linkLabel?: string;
};

export type Event = {
  _id: string;
  _type: "event";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  shortDescription?: string;
  venue?: string;
  location?: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  tags?: Array<string>;
  link?: string;
  startDate?: string;
  endDate?: string;
  timeDescription?: string;
  pastEventText?: string;
  pastEventLinkBehavior?: "keep" | "change" | "remove";
  pastEventLink?: string;
};

export type HomePage = {
  _id: string;
  _type: "homePage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  heroStyle?: "default" | "background-images";
  heroBackgroundImages?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
    _key: string;
  }>;
  heroImageTransitionDuration?: number;
  heroTextColor?: "black" | "white";
  enableFeaturedItems?: boolean;
  heroContentPosition?: "top-left" | "top-center" | "top-right" | "center-left" | "center-center" | "center-right" | "bottom-left" | "bottom-center" | "bottom-right";
  showHeroLogo?: boolean;
  featuredImages?: Array<{
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    linkType?: "none" | "internal" | "external";
    internalLink?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "page";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "homePage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "eventsIndexPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "collab";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "blogIndexPage";
    } | {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "blogPost";
    };
    externalUrl?: string;
    pageSectionId?: string;
    openInNewTab?: boolean;
    _type: "image";
    _key: string;
  }>;
  heroTitle?: string;
  heroSubtitle?: BlockContent;
  heroFeaturedItemsSubtitle?: string;
  heroCallToActionList?: CtaList;
  content?: PageBuilder;
};

export type BlogPost = {
  _id: string;
  _type: "blogPost";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  mainImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  subtitle?: string;
  author?: string;
  hasOverrideDate?: boolean;
  overrideDate?: string;
  content?: Array<{
    _key: string;
  } & PageSection | {
    _key: string;
  } & Divider | {
    _key: string;
  } & ItemList | {
    _key: string;
  } & RichText | {
    _key: string;
  } & Quote | {
    _key: string;
  } & TextImage | {
    _key: string;
  } & Card | {
    _key: string;
  } & CtaButton | {
    _key: string;
  } & CtaCalloutLink | {
    _key: string;
  } & CtaEmailButton | {
    _key: string;
  } & CtaEvents | {
    _key: string;
  } & CtaBlogPost | {
    _key: string;
  } & CardGrid | {
    _key: string;
  } & ImageBlock | {
    _key: string;
  } & ImageGallery | {
    _key: string;
  } & YouTubeVideo | {
    _key: string;
  } & SpotifyWidget | {
    _key: string;
  } & BandcampWidget | {
    _key: string;
  } & EventBlock | {
    _key: string;
  } & CollabAllBlock | {
    _key: string;
  } & FavouriteBlock | {
    _key: string;
  } & CompanyLinksBlock | {
    _key: string;
  } & BlockList>;
  hasClosingCard?: boolean;
  closingCard?: Card;
};

export type BlogIndexPage = {
  _id: string;
  _type: "blogIndexPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  subtitle?: string;
  noArticlesMessage?: string;
  hasClosingCard?: boolean;
  closingCard?: Card;
};

export type Collab = {
  _id: string;
  _type: "collab";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  name?: string;
  slug?: Slug;
  category?: string;
  location?: string;
  order?: number;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  previewImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  shortDescription?: string;
  useShortDescriptionForCards?: boolean;
  cardDescription?: string;
  bio?: string;
  mainContent?: Array<{
    _key: string;
  } & CollabPageSection>;
  links?: CollabLinksArray;
  sideContent?: SideContent;
};

export type CollabLinksArray = {
  _type: "collabLinksArray";
  socialLinksArray?: Array<{
    url?: string;
    detectedPlatform?: string;
    platform?: "officialWebsite" | "genericLink";
    customTitle?: string;
    _type: "socialLinkItem";
    _key: string;
  }>;
};

export type EventsIndexPage = {
  _id: string;
  _type: "eventsIndexPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  backgroundImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  subtitle?: string;
  noUpcomingEventsMessage?: string;
  hasEventsMessage?: boolean;
  eventsMessage?: Card;
  noPastEventsMessage?: string;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  slug?: Slug;
  heroImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    alt?: string;
    _type: "image";
  };
  subtitle?: string;
  content?: Array<{
    _key: string;
  } & PageSection | {
    _key: string;
  } & Divider | {
    _key: string;
  } & ItemList | {
    _key: string;
  } & RichText | {
    _key: string;
  } & Quote | {
    _key: string;
  } & TextImage | {
    _key: string;
  } & Card | {
    _key: string;
  } & CtaButton | {
    _key: string;
  } & CtaCalloutLink | {
    _key: string;
  } & CtaEmailButton | {
    _key: string;
  } & CtaEvents | {
    _key: string;
  } & CtaBlogPost | {
    _key: string;
  } & CardGrid | {
    _key: string;
  } & ImageBlock | {
    _key: string;
  } & ImageGallery | {
    _key: string;
  } & YouTubeVideo | {
    _key: string;
  } & SpotifyWidget | {
    _key: string;
  } & BandcampWidget | {
    _key: string;
  } & EventBlock | {
    _key: string;
  } & CollabAllBlock | {
    _key: string;
  } & FavouriteBlock | {
    _key: string;
  } & CompanyLinksBlock | {
    _key: string;
  } & BlockList>;
  hasClosingCard?: boolean;
  closingCard?: Card;
};

export type Card = {
  _type: "card";
  cardStyle?: "feature" | "statement";
  icon?: Icon;
  title?: string;
  bodyText?: string;
  ctaList?: CtaList;
};

export type CompanyLinks = {
  _id: string;
  _type: "companyLinks";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  companyLinks?: CompanyLinksArray;
};

export type CompanyLinksArray = {
  _type: "companyLinksArray";
  socialLinksArray?: Array<{
    url?: string;
    detectedPlatform?: string;
    platform?: "genericLink";
    customTitle?: string;
    hideFromFooter?: boolean;
    _type: "socialLinkItem";
    _key: string;
  }>;
};

export type SiteSettings = {
  _id: string;
  _type: "siteSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  siteTitle?: string;
  defaultPageTitle?: string;
  siteDescription?: string;
  seoKeywords?: string;
  defaultOgImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    media?: unknown;
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  companyEmail?: string;
};

export type Color = {
  _type: "color";
  hex?: string;
  alpha?: number;
  hsl?: HslaColor;
  hsv?: HsvaColor;
  rgb?: RgbaColor;
};

export type RgbaColor = {
  _type: "rgbaColor";
  r?: number;
  g?: number;
  b?: number;
  a?: number;
};

export type HsvaColor = {
  _type: "hsvaColor";
  h?: number;
  s?: number;
  v?: number;
  a?: number;
};

export type HslaColor = {
  _type: "hslaColor";
  h?: number;
  s?: number;
  l?: number;
  a?: number;
};

export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type Slug = {
  _type: "slug";
  current?: string;
  source?: string;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type AllSanitySchemaTypes = NavLink | CtaList | SideContent | SideContentBlock | BlockList | CompanyLinksBlock | FavouriteBlock | CollabAllBlock | EventBlock | CtaBlogPost | CtaEvents | HomeHeroCtaButton | EmbeddedCtaEmailButton | EmbeddedCtaButton | CtaEmailButton | CtaCalloutLink | CtaButton | TextImage | Quote | BandcampWidget | SpotifyWidget | YouTubeVideo | ImageGallery | ImageBlock | CardGrid | Icon | RichText | ItemList | Divider | SubSubSection | SubSection | CollabPageSection | PageSection | PageBuilder | Footer | Header | BlockContent | Favourites | Event | HomePage | BlogPost | BlogIndexPage | Collab | CollabLinksArray | EventsIndexPage | Page | Card | CompanyLinks | CompanyLinksArray | SiteSettings | Color | RgbaColor | HsvaColor | HslaColor | SanityImagePaletteSwatch | SanityImagePalette | SanityImageDimensions | SanityImageHotspot | SanityImageCrop | SanityFileAsset | SanityImageAsset | SanityImageMetadata | Geopoint | Slug | SanityAssetSourceData;
export declare const internalGroqTypeReferenceTo: unique symbol;
